// <auto-generated />
using System;
using HelloWorldWebApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace HelloWorldWebApp.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("HelloWorldWebApp.Data.Models.Intern", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Interns");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthdate = new DateTime(2000, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "fineasgavre@gmail.com",
                            Name = "Fineas Gavre"
                        },
                        new
                        {
                            Id = 2,
                            Birthdate = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "andreipopescu@gmail.com",
                            Name = "Andrei Popescu"
                        });
                });

            modelBuilder.Entity("HelloWorldWebApp.Data.Models.LibraryResource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Recommendation")
                        .HasColumnType("text");

                    b.Property<int>("SkillId")
                        .HasColumnType("integer");

                    b.Property<string>("URL")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("SkillId");

                    b.ToTable("LibraryResources");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "LibraryResource",
                            Recommendation = "Good",
                            SkillId = 1,
                            URL = "https://libresources.com"
                        },
                        new
                        {
                            Id = 2,
                            Name = "LibraryResource2",
                            Recommendation = "Bad",
                            SkillId = 2,
                            URL = "https://libresources2.com"
                        });
                });

            modelBuilder.Entity("HelloWorldWebApp.Data.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("InternId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("SkillMatrixUrl")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("InternId");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Nice skill 1",
                            InternId = 1,
                            Name = "Skill1",
                            SkillMatrixUrl = "https://url.here"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Nice skill 2",
                            InternId = 2,
                            Name = "Skill2",
                            SkillMatrixUrl = "https://url2.here"
                        });
                });

            modelBuilder.Entity("HelloWorldWebApp.Data.Models.TeamMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TeamMembers");
                });

            modelBuilder.Entity("HelloWorldWebApp.Data.Models.LibraryResource", b =>
                {
                    b.HasOne("HelloWorldWebApp.Data.Models.Skill", "Skill")
                        .WithMany("LibraryResources")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("HelloWorldWebApp.Data.Models.Skill", b =>
                {
                    b.HasOne("HelloWorldWebApp.Data.Models.Intern", "Intern")
                        .WithMany("Skills")
                        .HasForeignKey("InternId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Intern");
                });

            modelBuilder.Entity("HelloWorldWebApp.Data.Models.Intern", b =>
                {
                    b.Navigation("Skills");
                });

            modelBuilder.Entity("HelloWorldWebApp.Data.Models.Skill", b =>
                {
                    b.Navigation("LibraryResources");
                });
#pragma warning restore 612, 618
        }
    }
}
